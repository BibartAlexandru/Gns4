Router Agent(Device Agent)
Pc Agent(Device Agent)

Device Agent(Agent)
- interfaces
- Name
- Routing Table: Dict<IP, interface_name>
- ARP: Dict<IP, MAC>
- _send(msg: bytearr, dstMac, dstIP?)
- forwards_frames: bool
- _send_Frame(msg: Frame, dstMac)
- _send_Packet(msg: Packet, dstMac, dstIPv4)
- _send_ARP(msg: ARPPacket, dstMac)
- _send_DHCP(msg: DHCPPacket, dstMac, dstIP)
- _send_ICMP(msg: ICMPPacket, dstMac, dstIPv4)
- handleMessage(msg: bytearr)

Interface
- physical_up: bool
- logical_up: bool
- name: str
- MAC: str
- IP?: str
- connected_to: AgentInterface?
- send(msg: bytearr)

AgentInterface
- agentId
- interfaceName

Frame
- static const MIN_SIZE: int = 64
- static decode(msg: bytearr) -> Frame
- header : FrameHeader
- payload: FramePayload
- trailer: FrameTrailer

FrameHeader:
- DST_MAC
- SOURCE_MAC

FramePayload(ABSTRACT)

FrameTrailer:
- FCS

Packet(FramePayload)
- header: PacketHeader
- payload: PacketPayload

PacketPayload()

PacketHeader
- SRC_IP
- DEST_IP
- TTL

ICMPPacket(PacketPayload):
- MSG_TYPE: ECHO | REPLY | ..
- content: str?

DHCPPacket(PacketPayload): 

DHCPDiscover(DHCPPacket)

DHCPOffer(DHCPPacket)
- offered_IPs: list[IPv4]

DHCPRequest(DHCPPacket)
- requested_IP: IPv4

DHCPAckgnowledge(DHCPPacket)
- ackgnowledged_IP: IPv4

ARPPacket(FramePayload)

ARPRequest(ARPPacket)
- requested_ip: IPv4

ARPResponse(ARPPacket)
- requested_ip: IPv4
- response_mac: MAC

##
1. agents send byte arrays to eachother
2. Agents decode byte array
